#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT   0
#define NAV       1
#define SYM       2
#define FUNC      3
#define BLT       4
#define NUMLFT    5
#define NUMRHT    6
#define LOL_MAIN  7
#define LOL_AUX   8
#define WASD_MAIN 9
#define WASD_AUX  10

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
        };
    };
};

/ {

    behaviors {
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-unless-interrupted";
            require-prior-idle-ms = <50>;
            bindings = <&kp>, <&kp>;
        };
        hml: homerow_shift_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <50>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q        &kp W        &kp E       &kp R         &lt NUMRHT T                                 &lt NUMLFT Y  &kp U         &kp I         &kp O        &kp P
    &hml LCTL A  &hml LGUI S  &hml LALT D &hml LSHIFT F &kp G                                        &kp H         &hml RSHIFT J &hml RALT K   &hml RGUI L  &hml RCTL SEMI
    &kp Z        &kp X        &kp C       &kp V         &kp B                                        &kp N         &kp M         &kp COMMA     &kp DOT      &kp FSLH
                                          &kp DEL       &lt NAV RET  &lt FUNC TAB          &kp BSPC  &lt SYM SPACE &lt BLT SQT
            >;
        };

        nav_layer {
            bindings = <
    &kp ESC      &kp PG_UP    &kp UP      &kp PG_DN     &trans                                       &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp MINUS
    &kp HOME     &kp LEFT     &kp DOWN    &kp RIGHT     &kp END                                      &kp FSLH      &kp N4       &kp N5        &kp N6      &kp PLUS
    &trans       &trans       &trans      &trans        &trans                                       &kp EQUAL     &kp N1       &kp N2        &kp N3      &kp N0
                                          &trans        &trans  &kp TAB                    &kp BSPC  &kp SPACE     &kp DOT
            >;
        };

        sym_layer {
            bindings = <
    &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT                              &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL
    &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp LT                                 &kp GT        &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS
    &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word                             &trans        &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans      &kp BSLH
                                              &trans           &kp RET  &kp DEL             &kp BSPC  &trans        &trans
            >;
        };

        func_layer {
            bindings = <
    &bootloader   &kp LS(PG_UP) &kp LS(UP)   &kp LS(PG_DN) &trans                                      &kp C_MUTE       &kp F7       &kp F8        &kp F9      &kp F10
    &kp LS(HOME)  &kp LS(LEFT)  &kp LS(DOWN) &kp LS(RIGHT) &kp LS(END)                                 &kp K_VOL_UP     &kp F4       &kp F5        &kp F6      &kp F11
    &to LOL_MAIN  &to WASD_MAIN &trans       &trans        &trans                                      &kp K_VOL_DN     &kp F1       &kp F2        &kp F3      &kp F12
                                             &out OUT_USB  &out OUT_BLE  &trans            &kp C_PREV  &kp C_PLAY_PAUSE &kp C_NEXT
            >;
        };

        blt_layer {
            bindings = <
    &trans       &trans       &trans        &trans        &trans                                      &trans             &bt BT_PRV        &bt BT_NXT         &trans         &trans
    &trans       &trans       &trans        &trans        &trans                                      &bt BT_CLR         &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2   &bt BT_SEL 3
    &trans       &trans       &trans        &trans        &trans                                      &ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &out OUT_USB   &out OUT_BLE
                                            &trans        &trans  &trans               &out OUT_USB   &out OUT_BLE       &trans
            >;
        };

        numlft_layer {
            bindings = <
    &kp MINUS   &kp N7       &kp N8       &kp N9    &kp ASTRK                                         &trans      &trans      &trans      &trans      &trans
    &kp PLUS    &kp N4       &kp N5       &kp N6    &kp FSLH                                          &trans      &trans      &trans      &trans      &trans
    &kp N0      &kp N1       &kp N2       &kp N3    &kp EQUAL                                         &trans      &trans      &trans      &trans      &trans
                                        &trans      &kp SPACE   &kp DOT                       &trans  &trans      &trans
            >;
        };

        numrht_layer {
            bindings = <
    &trans       &trans       &trans       &trans        &trans                                      &kp ASTRK      &kp N7       &kp N8        &kp N9      &kp MINUS
    &trans       &trans       &trans       &trans        &trans                                      &kp FSLH       &kp N4       &kp N5        &kp N6      &kp PLUS
    &trans       &trans       &trans       &trans        &trans                                      &kp EQUAL      &kp N1       &kp N2        &kp N3      &kp N0
                                           &trans        &trans  &trans                     &kp DOT  &kp SPACE      &trans
            >;
        };

        league_main_layer {
            bindings = <
    &kp N1       &kp N2       &kp N3       &kp N4           &kp N5                                     &to DEFAULT &trans       &trans        &trans      &trans
    &kp Q        &kp W        &kp E        &kp R            &kp T                                      &trans      &trans       &trans        &trans      &trans
    &kp A        &kp S        &kp D        &kp F            &kp G                                      &trans      &trans       &trans        &trans      &trans
                                           &lt LOL_AUX ESC  &kp SPACE  &kp TAB              &trans  &trans      &trans
            >;
        };

        league_aux_layer {
            bindings = <
    &kp ESC      &kp F2       &kp F3       &kp F4        &kp F5                                     &to DEFAULT      &to DEFAULT       &to DEFAULT        &to DEFAULT      &to DEFAULT
    &kp LC(Q)    &kp LC(W)    &kp LC(E)    &kp LC(R)     &kp LC(T)                                  &to DEFAULT      &to DEFAULT       &to DEFAULT        &to DEFAULT      &to DEFAULT
    &kp LCTL     &kp P        &kp B        &kp F         &kp G                                      &to DEFAULT      &to DEFAULT       &to DEFAULT        &to DEFAULT      &to DEFAULT
                                           &trans        &kp SPACE  &trans             &to DEFAULT  &to DEFAULT      &to DEFAULT
            >;
        };

        wasd_main_layer {
            bindings = <
    &kp TAB       &kp Q    &kp W    &kp E             &kp R                                          &kp Y         &kp U         &kp I         &kp O        &kp P
    &kp LSHIFT    &kp A    &kp S    &kp D             &kp F                                          &kp H         &kp J         &kp K         &kp L        &kp SEMI
    &kp LCTL      &kp Z    &kp X    &kp C             &kp V                                          &kp N         &kp M         &kp COMMA     &kp DOT      &to FSLH
                                    &lt WASD_AUX ESC  &kp SPACE  &kp LCTL                  &kp BSPC  &to DEFAULT   &kp SQT
            >;
        };

        // since 'default' is the "lowest priority layer" i need to replicate it here to get the leftmost thumbkey on 'wasd_main_layer' to work
        wasd_aux_layer {
            bindings = <
    &kp Q        &kp W        &kp E       &kp R         &lt NUMRHT T                                 &lt NUMLFT Y  &kp U         &kp I         &kp O        &kp P
    &hml LCTL A  &hml LGUI S  &hml LALT D &hml LSHIFT F &kp G                                        &kp H         &hmr RSHIFT J &hmr RALT K   &hmr RGUI L  &hmr RCTL SEMI
    &kp Z        &kp X        &kp C       &kp V         &kp B                                        &kp N         &kp M         &kp COMMA     &kp DOT      &kp FSLH
                                          &kp DEL       &lt NAV RET  &lt FUNC TAB          &kp BSPC  &lt SYM SPACE &lt BLT SQT
            >;
        };
    };
};
